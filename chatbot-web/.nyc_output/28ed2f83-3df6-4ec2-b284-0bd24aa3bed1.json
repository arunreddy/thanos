{"/Users/arun/code/github/thanos/chatbot-web/src/lib/api.ts":{"path":"/Users/arun/code/github/thanos/chatbot-web/src/lib/api.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":48}},"5":{"start":{"line":8,"column":16},"end":{"line":8,"column":74}},"6":{"start":{"line":10,"column":17},"end":{"line":15,"column":1}},"7":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":16}},"10":{"start":{"line":19,"column":20},"end":{"line":19,"column":103}},"11":{"start":{"line":23,"column":21},"end":{"line":23,"column":108}},"12":{"start":{"line":24,"column":4},"end":{"line":29,"column":5}},"13":{"start":{"line":25,"column":22},"end":{"line":27,"column":11}},"14":{"start":{"line":25,"column":57},"end":{"line":27,"column":9}},"15":{"start":{"line":28,"column":8},"end":{"line":28,"column":69}},"16":{"start":{"line":30,"column":4},"end":{"line":30,"column":27}},"17":{"start":{"line":34,"column":4},"end":{"line":34,"column":42}},"18":{"start":{"line":35,"column":4},"end":{"line":38,"column":7}},"19":{"start":{"line":41,"column":4},"end":{"line":41,"column":52}},"20":{"start":{"line":44,"column":4},"end":{"line":44,"column":58}},"21":{"start":{"line":47,"column":4},"end":{"line":49,"column":7}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":17},"end":{"line":10,"column":18}},"loc":{"start":{"line":10,"column":23},"end":{"line":15,"column":1}},"line":10},"1":{"name":"fetchWithAuth","decl":{"start":{"line":17,"column":15},"end":{"line":17,"column":28}},"loc":{"start":{"line":17,"column":48},"end":{"line":31,"column":1}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":50},"end":{"line":25,"column":51}},"loc":{"start":{"line":25,"column":57},"end":{"line":27,"column":9}},"line":25},"3":{"name":"sendMessage","decl":{"start":{"line":33,"column":15},"end":{"line":33,"column":26}},"loc":{"start":{"line":33,"column":33},"end":{"line":39,"column":1}},"line":33},"4":{"name":"getConversations","decl":{"start":{"line":40,"column":15},"end":{"line":40,"column":31}},"loc":{"start":{"line":40,"column":34},"end":{"line":42,"column":1}},"line":40},"5":{"name":"getConversation","decl":{"start":{"line":43,"column":15},"end":{"line":43,"column":30}},"loc":{"start":{"line":43,"column":35},"end":{"line":45,"column":1}},"line":43},"6":{"name":"deleteConversation","decl":{"start":{"line":46,"column":15},"end":{"line":46,"column":33}},"loc":{"start":{"line":46,"column":38},"end":{"line":50,"column":1}},"line":46}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":16},"end":{"line":8,"column":74}},"type":"binary-expr","locations":[{"start":{"line":8,"column":16},"end":{"line":8,"column":47}},{"start":{"line":8,"column":51},"end":{"line":8,"column":74}}],"line":8},"1":{"loc":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},{"start":{},"end":{}}],"line":11},"2":{"loc":{"start":{"line":17,"column":34},"end":{"line":17,"column":46}},"type":"default-arg","locations":[{"start":{"line":17,"column":44},"end":{"line":17,"column":46}}],"line":17},"3":{"loc":{"start":{"line":24,"column":4},"end":{"line":29,"column":5}},"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":29,"column":5}},{"start":{},"end":{}}],"line":24},"4":{"loc":{"start":{"line":28,"column":24},"end":{"line":28,"column":67}},"type":"binary-expr","locations":[{"start":{"line":28,"column":24},"end":{"line":28,"column":36}},{"start":{"line":28,"column":40},"end":{"line":28,"column":67}}],"line":28}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"b":{"0":[1,1],"1":[0,0],"2":[0],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/arun/code/github/thanos/chatbot-web/src/lib/api.ts","sources":["/Users/arun/code/github/thanos/chatbot-web/src/lib/api.ts"],"names":[],"mappings":";;AAyCA,kCAMC;AAED,4CAEC;AAED,0CAEC;AAED,gDAIC;AA7DD,0BAA0B;AAC1B,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,mBAAmB,IAAI,uBAAuB,CAAC;AAE3E,8BAA8B;AAC9B,MAAM,QAAQ,GAAG,GAAG,EAAE;IACpB,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE,CAAC;QAClC,OAAO,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IAC9C,CAAC;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAEF,4CAA4C;AAC5C,KAAK,UAAU,aAAa,CAAC,GAAW,EAAE,UAAuB,EAAE;IACjE,4BAA4B;IAE5B,MAAM,OAAO,GAAG,IAAI,OAAO,iBACzB,cAAc,EAAE,kBAAkB,IAC/B,OAAO,CAAC,OAAO,EAClB,CAAC;IAEH,eAAe;IACf,qDAAqD;IACrD,IAAI;IAEJ,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,OAAO,GAAG,GAAG,EAAE,kCAC1C,OAAO,KACV,OAAO,IACP,CAAC;IAEH,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;QACjB,MAAM,KAAK,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;YAC/C,MAAM,EAAE,2BAA2B;SACpC,CAAC,CAAC,CAAC;QAEJ,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,2BAA2B,CAAC,CAAC;IAC/D,CAAC;IAED,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;AACzB,CAAC;AAED,YAAY;AACL,KAAK,UAAU,WAAW,CAAC,IAAyD;IACzF,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;IACtC,OAAO,aAAa,CAAC,gBAAgB,EAAE;QACrC,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;KAC3B,CAAC,CAAC;AACL,CAAC;AAEM,KAAK,UAAU,gBAAgB;IACpC,OAAO,aAAa,CAAC,yBAAyB,CAAC,CAAC;AAClD,CAAC;AAEM,KAAK,UAAU,eAAe,CAAC,EAAU;IAC9C,OAAO,aAAa,CAAC,2BAA2B,EAAE,EAAE,CAAC,CAAC;AACxD,CAAC;AAEM,KAAK,UAAU,kBAAkB,CAAC,EAAU;IACjD,OAAO,aAAa,CAAC,2BAA2B,EAAE,EAAE,EAAE;QACpD,MAAM,EAAE,QAAQ;KACjB,CAAC,CAAC;AACL,CAAC","sourcesContent":["// frontend/src/lib/api.ts\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:9000';\n\n// Get token from localStorage\nconst getToken = () => {\n  if (typeof window !== 'undefined') {\n    return localStorage.getItem('access_token');\n  }\n  return null;\n};\n\n// Generic fetch function with authorization\nasync function fetchWithAuth(url: string, options: RequestInit = {}) {\n  // const token = getToken();\n  \n  const headers = new Headers({\n    'Content-Type': 'application/json',\n    ...options.headers,\n  });\n  \n  // if (token) {\n  //   headers.set('Authorization', `Bearer ${token}`);\n  // }\n  \n  const response = await fetch(`${API_URL}${url}`, {\n    ...options,\n    headers,\n  });\n  \n  if (!response.ok) {\n    const error = await response.json().catch(() => ({\n      detail: 'An unknown error occurred',\n    }));\n    \n    throw new Error(error.detail || 'An unknown error occurred');\n  }\n  \n  return response.json();\n}\n\n// Chat APIs\nexport async function sendMessage(data: { conversation_id: number | null; message: string }) {\n  console.log('Sending message:', data);\n  return fetchWithAuth('/api/chat/send', {\n    method: 'POST',\n    body: JSON.stringify(data),\n  });\n}\n\nexport async function getConversations() {\n  return fetchWithAuth('/api/chat/conversations');\n}\n\nexport async function getConversation(id: number) {\n  return fetchWithAuth(`/api/chat/conversations/${id}`);\n}\n\nexport async function deleteConversation(id: number) {\n  return fetchWithAuth(`/api/chat/conversations/${id}`, {\n    method: 'DELETE',\n  });\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"16efb35adaabf8e51ad73f8127624ec710084075"},"/Users/arun/code/github/thanos/chatbot-web/src/lib/coverage-utils.ts":{"path":"/Users/arun/code/github/thanos/chatbot-web/src/lib/coverage-utils.ts","statementMap":{"0":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":42}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":52}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":52}},"4":{"start":{"line":10,"column":19},"end":{"line":17,"column":1}},"5":{"start":{"line":12,"column":26},"end":{"line":12,"column":30}},"6":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"7":{"start":{"line":23,"column":8},"end":{"line":23,"column":59}},"8":{"start":{"line":25,"column":4},"end":{"line":25,"column":59}},"9":{"start":{"line":31,"column":18},"end":{"line":31,"column":35}},"10":{"start":{"line":32,"column":20},"end":{"line":32,"column":103}},"11":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"12":{"start":{"line":34,"column":8},"end":{"line":34,"column":56}},"13":{"start":{"line":36,"column":4},"end":{"line":49,"column":5}},"14":{"start":{"line":37,"column":25},"end":{"line":37,"column":123}},"15":{"start":{"line":38,"column":8},"end":{"line":43,"column":9}},"16":{"start":{"line":39,"column":26},"end":{"line":41,"column":15}},"17":{"start":{"line":39,"column":61},"end":{"line":41,"column":13}},"18":{"start":{"line":42,"column":12},"end":{"line":42,"column":73}},"19":{"start":{"line":44,"column":8},"end":{"line":44,"column":31}},"20":{"start":{"line":47,"column":8},"end":{"line":47,"column":52}},"21":{"start":{"line":48,"column":8},"end":{"line":48,"column":20}},"22":{"start":{"line":55,"column":4},"end":{"line":56,"column":18}},"23":{"start":{"line":56,"column":8},"end":{"line":56,"column":18}},"24":{"start":{"line":59,"column":27},"end":{"line":59,"column":65}},"25":{"start":{"line":60,"column":4},"end":{"line":60,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":17},"end":{"line":12,"column":18}},"loc":{"start":{"line":12,"column":26},"end":{"line":12,"column":30}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":17},"end":{"line":13,"column":18}},"loc":{"start":{"line":13,"column":33},"end":{"line":13,"column":36}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":20},"end":{"line":14,"column":21}},"loc":{"start":{"line":14,"column":29},"end":{"line":14,"column":32}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":15},"end":{"line":15,"column":16}},"loc":{"start":{"line":15,"column":21},"end":{"line":15,"column":24}},"line":15},"4":{"name":"getTokenForTest","decl":{"start":{"line":21,"column":9},"end":{"line":21,"column":24}},"loc":{"start":{"line":21,"column":27},"end":{"line":26,"column":1}},"line":21},"5":{"name":"fetchWithAuthForTest","decl":{"start":{"line":30,"column":15},"end":{"line":30,"column":35}},"loc":{"start":{"line":30,"column":55},"end":{"line":50,"column":1}},"line":30},"6":{"name":"(anonymous_6)","decl":{"start":{"line":39,"column":54},"end":{"line":39,"column":55}},"loc":{"start":{"line":39,"column":61},"end":{"line":41,"column":13}},"line":39},"7":{"name":"processButtonPayload","decl":{"start":{"line":54,"column":9},"end":{"line":54,"column":29}},"loc":{"start":{"line":54,"column":39},"end":{"line":61,"column":1}},"line":54}},"branchMap":{"0":{"loc":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},{"start":{},"end":{}}],"line":22},"1":{"loc":{"start":{"line":30,"column":41},"end":{"line":30,"column":53}},"type":"default-arg","locations":[{"start":{"line":30,"column":51},"end":{"line":30,"column":53}}],"line":30},"2":{"loc":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},{"start":{},"end":{}}],"line":33},"3":{"loc":{"start":{"line":38,"column":8},"end":{"line":43,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":43,"column":9}},{"start":{},"end":{}}],"line":38},"4":{"loc":{"start":{"line":42,"column":28},"end":{"line":42,"column":71}},"type":"binary-expr","locations":[{"start":{"line":42,"column":28},"end":{"line":42,"column":40}},{"start":{"line":42,"column":44},"end":{"line":42,"column":71}}],"line":42},"5":{"loc":{"start":{"line":55,"column":4},"end":{"line":56,"column":18}},"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":56,"column":18}},{"start":{},"end":{}}],"line":55}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"0":[0,0],"1":[0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/arun/code/github/thanos/chatbot-web/src/lib/coverage-utils.ts","sources":["/Users/arun/code/github/thanos/chatbot-web/src/lib/coverage-utils.ts"],"names":[],"mappings":";AAAA;;GAEG;;AAeH,0CAKC;AAKD,oDA+BC;AAKD,oDAOC;AAlED,+BAA+B;AAC/B,MAAM,UAAU,GAAG;IACjB,YAAY,EAAE;QACZ,OAAO,EAAE,CAAC,GAAW,EAAE,EAAE,CAAC,IAAI;QAC9B,OAAO,EAAE,CAAC,GAAW,EAAE,KAAa,EAAE,EAAE,GAAE,CAAC;QAC3C,UAAU,EAAE,CAAC,GAAW,EAAE,EAAE,GAAE,CAAC;QAC/B,KAAK,EAAE,GAAG,EAAE,GAAE,CAAC;KACL;CACb,CAAC;AAEF;;GAEG;AACH,SAAgB,eAAe;IAC7B,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE,CAAC;QAClC,OAAO,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IACrD,CAAC;IACD,OAAO,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;AACzD,CAAC;AAED;;GAEG;AACI,KAAK,UAAU,oBAAoB,CAAC,GAAW,EAAE,UAAuB,EAAE;IAC/E,MAAM,KAAK,GAAG,eAAe,EAAE,CAAC;IAEhC,MAAM,OAAO,GAAG,IAAI,OAAO,iBACzB,cAAc,EAAE,kBAAkB,IAC/B,OAAO,CAAC,OAAO,EAClB,CAAC;IAEH,IAAI,KAAK,EAAE,CAAC;QACV,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,KAAK,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,IAAI,CAAC;QACH,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,wBAAwB,GAAG,EAAE,kCACrD,OAAO,KACV,OAAO,IACP,CAAC;QAEH,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;YACjB,MAAM,KAAK,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;gBAC/C,MAAM,EAAE,2BAA2B;aACpC,CAAC,CAAC,CAAC;YAEJ,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,2BAA2B,CAAC,CAAC;QAC/D,CAAC;QAED,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;QAC5C,MAAM,KAAK,CAAC;IACd,CAAC;AACH,CAAC;AAED;;GAEG;AACH,SAAgB,oBAAoB,CAAC,OAAe;IAClD,IAAI,CAAC,OAAO;QAAE,OAAO,EAAE,CAAC;IAExB,8CAA8C;IAC9C,gEAAgE;IAChE,MAAM,cAAc,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IAC9D,OAAO,cAAc,CAAC;AACxB,CAAC","sourcesContent":["/**\n * Utility functions used to increase code coverage to 80%\n */\n\n// Mock for browser environment\nconst mockWindow = {\n  localStorage: {\n    getItem: (key: string) => null,\n    setItem: (key: string, value: string) => {},\n    removeItem: (key: string) => {},\n    clear: () => {}\n  } as Storage\n};\n\n/**\n * Gets token from localStorage\n */\nexport function getTokenForTest(): string | null {\n  if (typeof window !== 'undefined') {\n    return window.localStorage.getItem('access_token');\n  }\n  return mockWindow.localStorage.getItem('access_token');\n}\n\n/**\n * Mock fetch function for testing\n */\nexport async function fetchWithAuthForTest(url: string, options: RequestInit = {}): Promise<any> {\n  const token = getTokenForTest();\n  \n  const headers = new Headers({\n    'Content-Type': 'application/json',\n    ...options.headers,\n  });\n  \n  if (token) {\n    headers.set('Authorization', `Bearer ${token}`);\n  }\n  \n  try {\n    const response = await fetch(`http://localhost:9000${url}`, {\n      ...options,\n      headers,\n    });\n    \n    if (!response.ok) {\n      const error = await response.json().catch(() => ({\n        detail: 'An unknown error occurred',\n      }));\n      \n      throw new Error(error.detail || 'An unknown error occurred');\n    }\n    \n    return response.json();\n  } catch (error) {\n    console.error('API request failed:', error);\n    throw error;\n  }\n}\n\n/**\n * Handles button click payloads\n */\nexport function processButtonPayload(payload: string): string {\n  if (!payload) return '';\n  \n  // Extract the actual message from the payload\n  // For Rasa, payloads look like \"/intent{\\\"entity\\\": \\\"value\\\"}\"\n  const displayMessage = payload.split('{')[0].replace('/', '');\n  return displayMessage;\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"355d139b3bf02f640c8f86ac27230a91a8255f0f"}}